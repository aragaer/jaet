<?xml version="1.0"?>
<bindings 
    xmlns="http://www.mozilla.org/xbl"
    xmlns:xbl="http://www.mozilla.org/xbl"
    xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
    <binding id="towlistitem" extends="chrome://global/content/bindings/richlistbox.xml#richlistitem">
        <content>
            <xul:hbox anonid="wrap" flex="1">
            <xul:vbox flex="1">
                <xul:hbox anonid="label" width="100%">
                    <xul:label xbl:inherits="value=name" class="header" />
                </xul:hbox>
                <xul:richlistbox anonid="fit" orient="horisontal" style="border: none"/>
            </xul:vbox>
            </xul:hbox>
        </content>
        <implementation>
            <constructor><![CDATA[
                this.db = Components.classes["@aragaer/eve/db;1"].getService(Components.interfaces.nsIEveDBService);
                this.fit = document.getAnonymousElementByAttribute(this,"anonid","fit");
            ]]></constructor>
            <property name="tower">
                <setter><![CDATA[
                    this._tower = val.QueryInterface(Components.interfaces.nsIEveControlTower);
                    this._tt = val.type.QueryInterface(Components.interfaces.nsIEveControlTowerType);
                    var ttid = this._tt.id;
                    var labelbox = document.getAnonymousElementByAttribute(this,"anonid","label");
                    if (!this.img) {
                        var wrap = document.getAnonymousElementByAttribute(this,"anonid","wrap");
                        this.img = document.createElement('image');
                        wrap.insertBefore(this.img, wrap.firstChild);
                    }
                    this.img.setAttribute('src', "chrome://jaet/content/images/"+ttid+".png");
                    if (!this.tlabel) {
                        this.tlabel = document.createElement("label");
                        labelbox.appendChild(this.tlabel);
                    }
                    this.tlabel.setAttribute('value',"("+this._tt.name+")");
                    if (!this.conslabel) {
                        var sp = document.createElement('spacer');
                        sp.setAttribute('flex', "100");
                        labelbox.appendChild(sp);
                        this.conslabel = document.createElement('label');
                        labelbox.appendChild(this.conslabel);
                    }

                    this.conslabel.value = "Power: "+this._tower.powerUsage + '/' + this._tt.powerGrid +
                            "; CPU: "+this._tower.CPUUsage + '/' + this._tt.CPU;

                    this.setAttribute("name", this._tower.name);
                    this.setAttribute("value", this._tower.id);
                    return val;
                ]]></setter>
                <getter />
            </property>
            <property name="id" onget="return this.value" />
            <property name="structures">
                <setter><![CDATA[
                    var fit = this.fit;
                    this.structs = val;
                    while (this.fit.firstChild)
                        this.fit.removeChild(this.fit.firstChild);
                    val.forEach(function (el) {
                        var itm = document.createElement('richlistitem');
                        itm.setAttribute('name', el.type.name);
                        fit.appendChild(itm);
                        itm.item = el;
                    });
                ]]></setter>
            </property>
        </implementation>
    </binding>
    <binding id="struct">
        <content>
            <xul:image src="" anonid="img" width="100px" height="100px" />
        </content>
        <implementation>
            <constructor><![CDATA[
                this._img = document.getAnonymousElementByAttribute(this,"anonid","img");
                this._item.addEventListener('draggesture', function () { alert('woof!') });
            ]]></constructor>
            <property name="item">
                <setter><![CDATA[
                    this._item = val;
                    this._img.src = "chrome://jaet/content/images/"+val.type.id+".png";
                ]]></setter>
            </property>
        </implementation>
    </binding>
</bindings>

