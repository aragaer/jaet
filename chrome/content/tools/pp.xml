<?xml version="1.0"?>
<bindings 
    xmlns="http://www.mozilla.org/xbl"
    xmlns:xbl="http://www.mozilla.org/xbl"
    xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
    <binding id="project_box">
        <content>
            <xul:hbox flex="1">
                <xul:vbox flex="1">
                    <xul:label value="Required" />
                    <xul:tree anonid="order" flex="1" context="order-menu" hidecolumnpicker="true">
                        <xul:treecols/>
                        <xul:treechildren/>
                    </xul:tree>
                </xul:vbox>
                <xul:splitter collapse="none"/>
                <xul:vbox flex="1">
                    <xul:label value="Spent" />
                    <xul:tree anonid="spent" flex="1" context="spent-menu" hidecolumnpicker="true">
                        <xul:treecols />
                        <xul:treechildren/>
                    </xul:tree>
                </xul:vbox>
            </xul:hbox>
            <xul:splitter collapse="before"><xul:grippy /></xul:splitter>
            <xul:hbox flex="5">
                <xul:vbox flex="1">
                    <xul:label value="To buy"/>
                    <xul:tree anonid="buy" flex="1" context="buy-menu" hidecolumnpicker="true">
                        <xul:treecols/>
                        <xul:treechildren/>
                    </xul:tree>
                </xul:vbox>
                <xul:splitter collapse="none"/>
                <xul:vbox flex="1">
                    <xul:label value="To build"/>
                    <xul:tree anonid="build" flex="1" context="build-menu" hidecolumnpicker="true">
                        <xul:treecols />
                        <xul:treechildren/>
                    </xul:tree>
                </xul:vbox>
                <xul:splitter collapse="none"/>
                <xul:vbox flex="1">
                    <xul:label value="Acquired"/>
                    <xul:tree anonid="acquired" flex="1" context="acquired-menu" hidecolumnpicker="true">
                        <xul:treecols/>
                        <xul:treechildren/>
                    </xul:tree>
                </xul:vbox>
            </xul:hbox>
        </content>
        <implementation>
            <method name="init">
                <parameter name="id"/>
                <body><![CDATA[
                    println("Project box constructor");
                    var me = this;
                    var xulns = "http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul";
                    [{cons: OrderTreeView,   anonid: 'order',  cols: ['itm', 'cnt']},
                    {cons: SpentTreeView,    anonid: 'spent',  cols: ['itm', 'cnt']},
                    {cons: BuyTreeView,      anonid: 'buy',    cols: ['itm', 'cnt', 'isk']},
                    {cons: BuildTreeView,    anonid: 'build',  cols: ['itm', 'cnt']},
                    {cons: AcquiredTreeView, anonid: 'acquired',cols:['itm', 'me', 'cnt']}].forEach( function (set) {
                        var view = set.anonid+'View';
                        me[view] = new set.cons;
                        me[view].pr = me;
                        var tree = document.getAnonymousElementByAttribute(me, 'anonid', set.anonid);
                        var treecols = tree.getElementsByTagNameNS(xulns, 'treecols')[0];
                        for (var i = 0; i < set.cols.length; i++) {
                            var treecol = document.createElementNS(xulns, 'treecol');
                            treecol.setAttribute('id', set.cols[i]+'-'+set.anonid+'-'+id);
                            if (i) {
                                var splitter = document.createElementNS(xulns, 'splitter');
                                splitter.setAttribute('class', 'tree-splitter');
                                treecols.appendChild(splitter);
                            } else
                                treecol.setAttribute('flex', 1);
                            var label;
                            switch (set.cols[i]) {
                                case 'itm': label = 'Item'; break;
                                case 'cnt': label = 'Count'; break;
                                case 'me':  label = 'ME'; break;
                                case 'isk': label = 'Cost'; break;
                                default: break;
                            }
                            treecol.setAttribute('label', label);
                            treecols.appendChild(treecol);
                        }
                        tree.view = me[view];
                    });
                ]]></body>
            </method>
            <method name="rebuild">
                <body><![CDATA[
                    this.orderView.rebuild();
                    this.spentView.rebuild();
                    this.buyView.rebuild();
                    this.buildView.rebuild();
                    this.acquiredView.rebuild();
                ]]></body>
            </method>
            <field name="project"/>
        </implementation>
    </binding>
</bindings>

